name: Create VPS

on:
  workflow_dispatch:
  repository_dispatch:
    types: [create-vps]

jobs:
  start-vps:
    runs-on: ubuntu-latest
    timeout-minutes: 355   # Run slightly less than 6h (to avoid hitting the hard cap)

    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v3

      - name: 📂 Create dirs
        run: mkdir -p links .backup

      - name: 📦 Restore backup
        run: |
          name="${{ github.event.client_payload.vps_name }}"
          if [ "${{ github.event.client_payload.backup }}" == "true" ]; then
            echo "🔄 Restoring backup..."
            unzip ".backup/$name.zip" -d . || echo "⚠️ No backup to restore."
          fi

      - name: 🔌 Start tmate session
        run: |
          echo "🔄 Launching tmate..."
          sudo apt install -y tmate
          tmate -S /tmp/tmate.sock new-session -d
          tmate -S /tmp/tmate.sock wait tmate-ready
          SSH=$(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')
          echo "$SSH" > "links/${{ github.event.client_payload.vps_name }}.txt"
          echo "✅ SSH Ready: $SSH"
          sleep 60 # give time for GitHub to sync

      - name: 💾 Save backup
        run: |
          name="${{ github.event.client_payload.vps_name }}"
          zip -r ".backup/$name.zip" * .git/** ".github/**" ".backup/**" || true

      - name: ⬆️ Push
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "🔄 Updated SSH + backup for ${{ github.event.client_payload.vps_name }}"
          file_pattern: 'links/*.txt .backup/*.zip'

      - name: 🔁 Re-trigger workflow
        if: always()
        run: |
          echo "🔄 Re-triggering workflow before timeout..."
          curl -X POST https://api.github.com/repos/${{ github.repository }}/dispatches \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -d '{ "event_type": "create-vps", "client_payload": { "vps_name": "autovps", "backup": true }}'
